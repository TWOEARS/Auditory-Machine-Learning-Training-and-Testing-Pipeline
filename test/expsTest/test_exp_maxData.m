function test_exp_maxData()
    
addpath( '../..' );
startIdentificationTraining();

featureCreators = {?featureCreators.FeatureSet1Blockmean,...
                   ?featureCreators.FeatureSet1Blockmean2Ch};
azimuths = {{0,0},...
    {0,45},{45,0},{22.5,-22.5},{67.5,112.5},{-157.5,157.5},...
    {0,90},{22.5,112.5},{45,135},{90,180},{22.5,-67.5},{45,-45},{90,0},{-157.5,112.5},...
    {0,180},{22.5,-157.5},{45,-135},{67.5,-112.5},{90,-90}}; % 19 cfgs
snrs = {0,-10,10,-20};
datasets = {'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TrainSet_1.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TestSet_1.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TrainSet_2.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TestSet_2.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TrainSet_3.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TestSet_3.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TrainSet_4.flist',...
            'learned_models/IdentityKS/trainTestSets/NIGENS_75pTrain_TestSet_4.flist'
            };
classes = {'alarm','baby','femaleSpeech','fire','crash','dog','engine','footsteps',...
           'knock','phone','piano'};
       
if exist( 'pds_expsMaxData_test.mat', 'file' )
    load( 'pds_expsMaxData_test.mat' );
else
    doneCfgsTest = {};
end

for ddt = 2
for cc = 1 : 2
if exist( ['pds_expsMaxData' num2str(cc) '.mat'], 'file' )
    load( ['pds_expsMaxData' num2str(cc) '.mat'] );
else
    warning( 'training mat file not found' );
    pause;
    continue;
end
for ff = 2
for ss = 1
for aa = [1 4 9]
for mds = [5000 15000 30000 50000]
for bd = [0 1]
    
dd = ddt-1;

fprintf( '\n\n==============\nTesting %s, dd = %d, ff = %d\nss = %d, mds = %d, aa = %d, bd = %d.==============\n\n', ...
    classes{cc}, ddt, ff, ss, mds, aa, bd );


if ~any( cellfun( @(x)(all(x==[cc dd ss ff aa mds bd])), doneCfgs ) )
    continue; % training not done yet
end
if any( cellfun( @(x)(all(x==[cc ddt ss ff aa mds bd])), doneCfgsTest ) )
    continue; % testing already done
end
    
pipe = TwoEarsIdTrainPipe();
pipe.featureCreator = feval( featureCreators{ff}.Name );
pipe.modelCreator = ...
    modelTrainers.LoadModelNoopTrainer( ...
        @(cn)(fullfile( modelpathes{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}, [cn '.model.mat'] )), ...
        'performanceMeasure', @performanceMeasures.BAC2, ...
        'modelParams', struct('lambda', []) );
pipe.modelCreator.verbose( 'on' );

pipe.trainset = [];
pipe.testset = datasets{ddt};
pipe.setupData();

sc = sceneConfig.SceneConfiguration();
sc.addSource( sceneConfig.PointSource( ...
    'azimuth',sceneConfig.ValGen('manual',azimuths{aa}{1}) ) );
sc.addSource( sceneConfig.PointSource( ...
    'azimuth',sceneConfig.ValGen('manual',azimuths{aa}{2}), ...
    'data',sceneConfig.FileListValGen(pipe.pipeline.data('general',:,'wavFileName')),...
    'offset', sceneConfig.ValGen('manual',0.0) ),...
    sceneConfig.ValGen( 'manual', snrs{ss} ),...
    true ); % loop
pipe.setSceneConfig( sc );

pipe.init();
modelpathes_test{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = pipe.pipeline.run( classes(cc), 0 );

testmodel = load( [modelpathes_test{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} filesep classes{cc} '.model.mat'] );

test_performances{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = [testmodel.testPerfresults.performance];
cv_performances{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = testmodel.model.lPerfsMean;
cv_std{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = testmodel.model.lPerfsStd;
[coefIdxs_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 impacts_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 perf_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 lambda_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 nCoefs_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}] = testmodel.model.getBestLambdaCVresults();
[coefIdxs_bms{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 impacts_bms{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 perf_bms{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 lambda_bms{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 nCoefs_bms{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}] = testmodel.model.getBestMinStdCVresults();
[coefIdxs_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 impacts_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 perf_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 lambda_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 nCoefs_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}] = testmodel.model.getHighestLambdaWithinStdCVresults();
lbIdx = find( testmodel.model.model.lambda == lambda_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} );
lhwsIdx = find( testmodel.model.model.lambda == lambda_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} );
test_performances_b{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = test_performances{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}(lbIdx);
test_performances_hws{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = test_performances{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}(lhwsIdx);
[lambdas{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1},...
 nCoefs{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1}] = testmodel.model.getLambdasAndNCoefs();
testTime{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = testmodel.trainTime;
trainTime{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} = ...
    load( [modelpathes{cc,dd,ss,ff,aa,find(mds==[5000 15000 30000 50000]),bd+1} filesep classes{cc} '.model.mat'], 'trainTime' );

doneCfgsTest{end+1} = [cc ddt ss ff aa mds bd];

save( 'pds_expsMaxData_test', ...
    'modelpathes_test', 'doneCfgsTest', ...
    'test_performances', 'cv_performances', 'cv_std',...
    'coefIdxs_b', 'impacts_b', 'perf_b', 'lambda_b', 'nCoefs_b',...
    'coefIdxs_bms', 'impacts_bms', 'perf_bms', 'lambda_bms', 'nCoefs_bms',...
    'coefIdxs_hws', 'impacts_hws', 'perf_hws', 'lambda_hws', 'nCoefs_hws',...
    'test_performances_b', 'test_performances_hws', 'lambdas', 'nCoefs', ...
    'trainTime', 'testTime' );

end
end
end
end
end
end
end

