function trainAndTestMultiSourceBabyVsAll()

addPathsIfNotIncluded( cleanPathFromRelativeRefs( [pwd '/..'] ) ); 
startIdentificationTraining();

pipe = TwoEarsIdTrainPipe( 'soundDbBaseDir', ...
                           fullfile( xml.dbPath, 'sound_databases', 'generalSoundsNI' ) );
pipe.blockCreator = BlockCreators.DistractedBlockCreator( 1.0, 0.4, ...
                                                          'distractorSources', [2 3],...
                                                          'rejectEnergyThreshold', -30 );
pipe.featureCreator = featureCreators.FeatureSet1Blockmean();
babyLabeler = LabelCreators.BinaryEventTypeLabeler( 'posOutType', {'baby'}, ...
                                                   'labelBlockSize_s', 1.0 );
pipe.labelCreator = babyLabeler;
%% other labeler examples
% 
% % baby will be 1, fire -1
% babyVsFireLabeler = LabelCreators.BinaryEventTypeLabeler( 'posOutType', {'baby'}, ...
%                                                           'negOut', 'event', ...
%                                                           'negOutType', {'fire'}, ...
%                                                           'labelBlockSize_s', 1.0 );
% pipe.labelCreator = babyVsFireLabeler;
% 
% % baby+female will be 1, rest -1
% babyFemaleVsRestLabeler = ... 
%     LabelCreators.BinaryEventTypeLabeler( 'posOutType', {'baby', 'femaleSpeech'}, ...
%                                           'negOut', 'all', 'negOutType', 'rest', ...
%                                           'labelBlockSize_s', 1.0 );
% pipe.labelCreator = babyFemaleVsRestLabeler;
% 
% % alarm will be 1, baby 2, female 3, fire 4
% typeMulticlassLabeler = ... 
%     LabelCreators.MultiEventTypeLabeler( 'types', ...
%                                        {{'alarm'},{'baby'},{'femaleSpeech'},{'fire'}}, ...
%                                        'labelBlockSize_s', 1.0 );
% pipe.labelCreator = typeMulticlassLabeler;
% 
% % multinomial labels: baby will be (1,1,2), fire (-1,-1,4), female (-1,0,3)
% multiLabeler = LabelCreators.MultiLabeler( ...
%                            {babyLabeler,babyVsFireLabeler,typeMulticlassLabeler}, false );
% pipe.labelCreator = multiLabeler;
% 
%%
pipe.modelCreator = modelTrainers.GlmNetLambdaSelectTrainer( ...
    'performanceMeasure', @performanceMeasures.BAC2, ...
    'cvFolds', 4, ...
    'alpha', 0.99 );
pipe.modelCreator.verbose( 'on' );

pipe.trainset = 'testFlists/NIGENS_trainSet_miniMini.flist';
pipe.setupData();

sc = sceneConfig.SceneConfiguration();
sc.addSource( sceneConfig.PointSource( ...
        'data', sceneConfig.FileListValGen( pipe.pipeline.trainSet(:,:,'wavFileName'), 'all' ),...
        'normalize', true,...
        'loop', 'none' ),...
    'snr', sceneConfig.ValGen( 'manual', 0 ),...
    'snrRef', 1 );
sc.addSource( sceneConfig.PointSource( ...
        'data', sceneConfig.FileListValGen( pipe.pipeline.trainSet('fire',:,'wavFileName'), 'one' ),...
        'normalize', true,...
        'loop', 'randomSeq' ),...
    'snr', sceneConfig.ValGen( 'manual', 0 ),...
    'snrRef', 1 );
sc.addSource( sceneConfig.PointSource( ...
        'data', sceneConfig.FileListValGen( pipe.pipeline.trainSet('general',:,'wavFileName'), 'one' ),...
        'normalize', true,...
        'loop', 'randomSeq' ),...
    'snr', sceneConfig.ValGen( 'manual', 10 ),...
    'snrRef', 1 );
sc.setLengthRef( 'source', 1 );
pipe.init( sc );

modelPath = pipe.pipeline.run( 0 );

fprintf( ' -- Model is saved at %s -- \n\n', modelPath );

% TODO: test