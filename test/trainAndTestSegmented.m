function trainAndTestSegmented( modelPath )

addPathsIfNotIncluded( cleanPathFromRelativeRefs( [pwd '/..'] ) ); 
startAMLTTP();
addPathsIfNotIncluded( {...
    cleanPathFromRelativeRefs( [pwd '/../../segmentation-training-pipeline/src'] ), ... 
    cleanPathFromRelativeRefs( [pwd '/../../segmentation-training-pipeline/external/data-hash'] ), ...
    cleanPathFromRelativeRefs( [pwd '/../../segmentation-training-pipeline/external/yaml-matlab'] ) ...
    } );
segmModelFileName = '70c4feac861e382413b4c4bfbf895695.mat';
mkdir( fullfile( db.tmp, 'learned_models', 'SegmentationKS' ) );
copyfile( ['./' segmModelFileName], ...
          fullfile( db.tmp, 'learned_models', 'SegmentationKS', segmModelFileName ), ...
          'f' );

brirs = { ...
    'impulse_responses/twoears_kemar_adream/TWOEARS_KEMAR_ADREAM_pos1.sofa'; ...
    'impulse_responses/twoears_kemar_adream/TWOEARS_KEMAR_ADREAM_pos2.sofa'; ...
    'impulse_responses/twoears_kemar_adream/TWOEARS_KEMAR_ADREAM_pos3.sofa'; ...
    'impulse_responses/twoears_kemar_adream/TWOEARS_KEMAR_ADREAM_pos4.sofa'; ...
    };

%% train

if nargin < 1 || isempty( modelPath )
    
pipe = TwoEarsIdTrainPipe();
pipe.ksWrapper = DataProcs.SegmentKsWrapper( ...
    'SegmentationTrainerParameters5.yaml', ...
    'useDnnLocKs', false, ...
    'useNsrcsKs', false, ...
    'segSrcAssignmentMethod', 'minDistance', ...
    'varAzmSigma', 15, ...
    'nsrcsBias', 0, ...
    'nsrcsRndPlusMinusBias', 2 );
pipe.featureCreator = FeatureCreators.FeatureSet5Blockmean();
babyLabeler = LabelCreators.MultiEventTypeLabeler( 'types', {{'baby'}}, 'negOut', 'rest', ...
                           'removeUnclearBlocks', 'time-wise',...
                           'segIdTargetSrcFilter', [1,1] ); % target sounds only on source 1 );
pipe.labelCreator = babyLabeler;
pipe.modelCreator = ModelTrainers.GlmNetLambdaSelectTrainer( ...
    'performanceMeasure', @PerformanceMeasures.BAC2, ...
    'cvFolds', 4, ...
    'alpha', 0.99, 'maxDataSize', 1000 );
pipe.modelCreator.verbose( 'on' );

pipe.trainset = 'learned_models/IdentityKS/trainTestSets/NIGENS160807_miniMini_TrainSet_1.flist';
pipe.setupData();

sc(1) = SceneConfig.SceneConfiguration();
sc(1).addSource( SceneConfig.BRIRsource( ...
        brirs{1}, 'speakerId', 2, ...
        'data', SceneConfig.FileListValGen( 'pipeInput' ) )...
        );
sc(1).addSource( SceneConfig.BRIRsource( ...
        brirs{1}, 'speakerId', 3, ...
        'data', SceneConfig.FileListValGen( ...
               pipe.pipeline.trainSet('fileLabel',{{'type',{'general'}}},'fileName') ),...
        'offset', SceneConfig.ValGen( 'manual', 0 )  ),...
    'snr', SceneConfig.ValGen( 'manual', 10 ),...
    'loop', 'randomSeq' );
sc(1).addSource( SceneConfig.BRIRsource( ...
        brirs{1}, 'speakerId', 4, ...
        'data', SceneConfig.FileListValGen( ...
               pipe.pipeline.trainSet('fileLabel',{{'type',{'baby'}}},'fileName') ),...
        'offset', SceneConfig.ValGen( 'manual', 5.0 )  ),...
    'snr', SceneConfig.ValGen( 'manual', 0 ),...
    'loop', 'randomSeq' );
sc(1).setBRIRheadOrientation( 0.3 );
pipe.init( sc, 'hrir', [], 'fs', 16000 );

modelPath = pipe.pipeline.run( 'modelName', 'segmModel', 'modelPath', 'test_segmented', 'debug', true );

fprintf( ' -- Model is saved at %s -- \n\n', modelPath );

end

%% test

pipe = TwoEarsIdTrainPipe();
pipe.ksWrapper = DataProcs.SegmentKsWrapper( ...
    'SegmentationTrainerParameters5.yaml', ...
    'useDnnLocKs', false, ...
    'useNsrcsKs', false, ...
    'segSrcAssignmentMethod', 'minPermutedDistance', ...
    'varAzmSigma', 'fixedUniform', ...
    'nsrcsBias', 'fixed8', ...
    'nsrcsRndPlusMinusBias', 0 );
pipe.featureCreator = FeatureCreators.FeatureSet5Blockmean();
babyLabeler = LabelCreators.MultiEventTypeLabeler( 'types', {{'baby'}}, 'negOut', 'rest', ...
                           'removeUnclearBlocks', 'time-wise',...
                           'segIdTargetSrcFilter', [1,1] ); % target sounds only on source 1 );
pipe.labelCreator = babyLabeler;
pipe.modelCreator = ModelTrainers.LoadModelNoopTrainer( ...
    [pwd filesep 'test_segmented/segmModel.model.mat'], ...
    'performanceMeasure', @PerformanceMeasures.BAC );
pipe.modelCreator.verbose( 'on' );

pipe.testset = 'learned_models/IdentityKS/trainTestSets/NIGENS160807_miniMini_TestSet_1.flist';
pipe.setupData();

sc(1) = SceneConfig.SceneConfiguration();
sc(1).addSource( SceneConfig.PointSource( ...
        'data', SceneConfig.FileListValGen( 'pipeInput' ), ...
        'azimuth', SceneConfig.ValGen( 'manual', -45 ) )  );
sc(1).addSource( SceneConfig.PointSource( ...
        'data', SceneConfig.FileListValGen( ...
               pipe.pipeline.testSet('fileLabel',{{'type',{'general'}}},'fileName') ),...
        'offset', SceneConfig.ValGen( 'manual', 0 ), ...
        'azimuth', SceneConfig.ValGen( 'manual', +45 )  ),...
    'snr', SceneConfig.ValGen( 'manual', 10 ),...
    'loop', 'randomSeq' );
sc(1).addSource( SceneConfig.PointSource( ...
        'data', SceneConfig.FileListValGen( ...
               pipe.pipeline.testSet('fileLabel',{{'type',{'general'}}},'fileName') ),...
        'offset', SceneConfig.ValGen( 'manual', 0 ), ...
        'azimuth', SceneConfig.ValGen( 'manual', +135 )  ),...
    'snr', SceneConfig.ValGen( 'manual', -10 ),...
    'loop', 'randomSeq' );
sc(2) = SceneConfig.SceneConfiguration();
sc(2).addSource( SceneConfig.PointSource( ...
        'data', SceneConfig.FileListValGen( 'pipeInput' ), ...
        'azimuth', SceneConfig.ValGen( 'manual', -45 ) )  );
sc(2).addSource( SceneConfig.PointSource( ...
        'data', SceneConfig.FileListValGen( ...
               pipe.pipeline.testSet('fileLabel',{{'type',{'baby'}}},'fileName') ),...
        'offset', SceneConfig.ValGen( 'manual', 0 ), ...
        'azimuth', SceneConfig.ValGen( 'manual', +45 )  ),...
    'snr', SceneConfig.ValGen( 'manual', 10 ),...
    'loop', 'randomSeq' );
sc(2).addSource( SceneConfig.DiffuseSource( ...
        'offset', SceneConfig.ValGen( 'manual', 0 )  ),...
    'snr', SceneConfig.ValGen( 'manual', 0 ),...
    'loop', 'randomSeq' );
pipe.init( sc, 'fs', 16000 );

[modelPath,~,testPerfresults] = ...
             pipe.pipeline.run( 'modelName', 'segmModel', 'modelPath', 'test_segmented' );

fprintf( ' -- Model is saved at %s -- \n\n', modelPath );

%% analysis

resc = RescSparse( 'uint32', 'uint8' );
resct = RescSparse( 'uint32', 'uint8' );
resct2 = RescSparse( 'uint32', 'uint8' );
    
% profile on

% filesema = setfilesemaphore( 'test.mat' );
% if exist( 'test.mat', 'file' )
%     load( 'test.mat' );
% end
% removefilesemaphore( filesema );

scp = struct('nSources',{3},'headPosIdx',{0},'ambientWhtNoise',{1},'whtNoiseSnr',{8});
scp.id = 1;
[resc,resct,resct2] = analyzeBlockbased( resc, resct, resct2, testPerfresults, scp, true, 'classIdx', 2, 'dd', 2 );
% 1:counts, 2:classIdx, 3: dd, 
% 4:nAct, 5:curSnr, 6:distToClosestSrc, 7:multiSrcsAttributability, 8:azmErr, 
% 9:nEstErr, 10:nAct_segStream, 11:curNrj, 12:curNrjOthers, 
% 13:scpId, 14:whiteNoise, 15:headPosIdx

% filesema = setfilesemaphore( 'test.mat' );
% if exist( 'test.mat', 'file' )
%     fileupdate = load( 'test.mat' );
% %     [data,dataIdxs] = fileupdate.resc.getRowIndexed( 1:size( fileupdate.resc.dataIdxs, 1 ) );
% %     dataIdxs(:,1) = dataIdxs(:,1)+1;
% %     fileupdate.resc = fileupdate.resc.addData( dataIdxs, data );
%     fprintf( ':' );
%     resc = syncResults2( resc, fileupdate.resc, 2, 1 );
%     fprintf( ':' );
%     resct = syncResults2( resct, fileupdate.resct, 2, 1 );
%     fprintf( ':' );
% end
% save( 'test.mat', ...
%       'resc','resct', ...
%       '-v7.3' );
% fprintf( ';\n' );
% removefilesemaphore( filesema );

% profile viewer

[sens,spec] = getPerformanceDecorr( resc, [3], [] );
[senst,spect] = getPerformanceDecorr( resct, [3], [] );
[senst2,spect2] = getPerformanceDecorr( resct2, [3], [] );

end
